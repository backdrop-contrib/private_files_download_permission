<?php

/**
 * @file
 * Handles both module settings and its behaviour.
 *
 * Copyright (c) 2011-2012 by Marco Zanon (http://www.marcozanon.com)
 * Released under GPLv2 license
 * Idea and code inspired by http://www.beacon9.ca/labs/drupal-7-private-files-module
 */

/**
 * Implements hook_permission().
 */
function private_files_download_permission_permission() {
  return array(
    'administer private files download permission' => array(
      'title' => t('Administer Private files download permission'),
      'description' => t('Access module configuration.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function private_files_download_permission_menu() {
  return array(
    'admin/config/media/private-files-download-permission/view' => array(
      'title' => 'Private files download permission',
      'description' => 'Show directory list view.',
      'page callback' => 'private_files_download_permission_view',
      'access arguments' => array('administer private files download permission'),
    ),
  );
}

/**
 * Returns the list of all directories under control.
 */
function private_files_download_permission_directory_list() {
  return db_query('SELECT   *
                   FROM     {private_files_download_permission_directory}
                   ORDER BY {private_files_download_permission_directory}.path ASC')
           ->fetchAllAssoc('did');
}

/**
 * Prepares and displays the main directory list view.
 */
function private_files_download_permission_view() {
  $output = '';
  // Check if the file system download method is set to private.
  if ('public' == file_default_scheme()) {
    drupal_set_message(t('You need to set your file system download method to private.'), 'error');
  }
  // Display the private file system path.
  $output .= t('Your private file system path is %path.', array('%path' => variable_get('file_private_path')));
  // Retrieve the directory list and display it as a table.
  $directory_list = private_files_download_permission_directory_list();
  $rows = array();
  foreach ($directory_list as $directory) {
    $rows[] = array(
      $directory->path,
      l(t('Edit'), 'admin/config/media/private-files-download-permission/edit/' . $directory->did),
      l(t('Delete'), 'admin/config/media/private-files-download-permission/delete/' . $directory->did),
    );
  }
  $output .= theme_table(array(
    'header' => array(
      t('Path'),
      array(
        'data' => t('Operations'),
        'colspan' => 2,
      ),
    ),
    'rows' => $rows,
    'attributes' => array(),
    'caption' => NULL,
    'colgroups' => array(),
    'sticky' => FALSE,
    'empty' => t('The directory list is empty.'),
  ));
  // Display the 'Add directory' link.
  $output .= l(t('Add directory'), 'admin/config/media/private-files-download-permission/edit');
  // Return output.
  return $output;
}

/**
 * Form callback (configuration).
 */
function private_files_download_permission_settings($form, &$form_state) {
  if ('public' == file_default_scheme()) {
    drupal_set_message(t('You need to enable the private file system before you setup this module.'), 'error');
  }
  $form['private_files_download_permission_unprotected_subfolder'] = array(
    '#type' => 'textfield',
    '#title' => t('Unprotected subfolder'),
    '#default_value' => variable_get('private_files_download_permission_unprotected_subfolder'),
    '#size' => '60',
    '#description' => t('Use a relative path and don\'t add leading or trailing slashes. Caution: private downloads filters will be bypassed for the above subfolder (making it "public")!'),
  );
  return system_settings_form($form);
}

/**
 * Form callback (validation).
 */
function private_files_download_permission_settings_validate($form, &$form_state) {
  // Make sure the unprotected subfolder variable does not use leading or trailing slashes.
  $unprotected_subfolder = $form_state['values']['private_files_download_permission_unprotected_subfolder'];
  if (0 < drupal_strlen($unprotected_subfolder)) {
    $first_char = drupal_substr($unprotected_subfolder, 0, 1);
    $last_char = drupal_substr($unprotected_subfolder, -1, 1);
    if (('/' == $first_char) || ('\\' == $first_char)) {
      form_set_error('private_files_download_permission_unprotected_subfolder', t('You cannot use leading slashes.'));
    }
    if (('/' == $last_char) || ('\\' == $last_char)) {
      form_set_error('private_files_download_permission_unprotected_subfolder', t('You cannot use trailing slashes.'));
    }
  }
}

/**
 * Implements hook_file_download().
 */
function private_files_download_permission_file_download($uri) {
  $path = explode('/', $uri);
  if (($path[2] === variable_get('private_files_download_permission_unprotected_subfolder')) || (user_access('download private files'))) {
    return array('Content-Type' => file_get_mimetype($uri));
  }
  return -1;
}
